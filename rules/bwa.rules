
rule index_bam_file:
    conda:
        "../envs/bwa-samtools.yml"
    input:
        "{any_bam}.bam"
    output:
        temp("{any_bam}.bam.bai"),
    shell:
        """
        samtools index {input[0]}
        """

rule index_reference_fasta:
    conda:
        "../envs/bwa-samtools.yml"
    input:
        "reference/reference_genome.fna"
    output:
        "reference/reference_genome.fna.fai",
        "reference/reference_genome.fna.bwt",
    shell:
        """
        samtools faidx {input[0]} &> /dev/null
        bwa index {input[0]} &>> /dev/null
        """

rule map_single_reads_with_bwa:
    conda:
        "../envs/bwa-samtools.yml"
    params:
        platform = "ILLUMINA"
    input:
        fastq = "samples/{sample}/reads/trimmed/single.fastq",
        ref = "reference/reference_genome.fna",
        ref_index = "reference/reference_genome.fna.bwt",
    output:
        temp("samples/{sample}/mapping/bwa/reference_genome.bam"),
    log:
        logging_folder+"samples/{sample}/logs/mapping/bwa/reference_genome_log.txt"
    shell:
        """
        if ls {output[0]}.tmp* 1> /dev/null 2>&1
        then
             rm {output[0]}.tmp*
        fi
        (bwa mem -R '@RG\\tID:{wildcards.sample}\\tSM:{wildcards.sample}\\tPL:{params.platform}' {input[ref]} {input[fastq]} -v 1 | samtools sort -O BAM -o {output[0]}) 2> {log}
        """

rule map_single_reads_subset_with_bwa:
    conda:
        "../envs/bwa-samtools.yml"
    params:
        platform = "ILLUMINA"
    input:
        fastq = "samples/{sample}/mapping/bwa/reference_genome_mapped_sample_{count}.fastq",
        ref = "reference/reference_genome.fna",
        ref_index = "reference/reference_genome.fna.bwt",
    output:
        temp("samples/{sample}/mapping/bwa/sample_{count}/reference_genome.bam"),
    log:
        logging_folder+"samples/{sample}/logs/mapping/bwa/sample_{count}/reference_genome_log.txt"
    shell:
        """
        if ls {output[0]}.tmp* 1> /dev/null 2>&1
        then
             rm {output[0]}.tmp*
        fi
        (bwa mem -R '@RG\\tID:{wildcards.sample}\\tSM:{wildcards.sample}\\tPL:{params.platform}' {input[ref]} {input[fastq]} -v 1 | samtools sort -O BAM -o {output[0]}) 2> {log}
        """
